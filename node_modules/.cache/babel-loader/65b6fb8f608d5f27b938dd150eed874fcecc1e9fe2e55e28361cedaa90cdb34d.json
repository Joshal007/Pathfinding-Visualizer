{"ast":null,"code":"var _jsxFileName = \"D:\\\\Algo-visualizer-main\\\\Algo-visualizer-main\\\\src\\\\components\\\\Grid\\\\Grid.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport { getGrid } from '../../utils/startinggrid';\nimport './grid.css';\nimport { useParams } from '../../context/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getrefarray(grid) {\n  let array = [];\n  grid.forEach(elem => {\n    var _s = $RefreshSig$();\n    _s(elem.forEach(_s(child => {\n      _s();\n      array.push(useRef());\n    }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\")), \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n  });\n  return array;\n}\nexport default function Grid() {\n  _s2();\n  const {\n    grid,\n    setgrid,\n    editing,\n    seteditFlag,\n    mode,\n    start,\n    end,\n    run,\n    res,\n    algo\n  } = useParams();\n\n  //const [refarray,mm]=useState(getrefarray(grid))\n\n  const refarray = getrefarray(grid);\n  function BFS(graph, hashmap, prevmap, start, target) {\n    let queue = [start];\n    let count = 0;\n    hashmap[`${start.x}-${start.y}`] = true;\n    while (queue.length > 0) {\n      count += 1;\n      let c = queue.pop();\n      refarray[c.x + c.y * 40].current.style['transition-delay'] = `${count * 8}ms`;\n      refarray[c.x + c.y * 40].current.classList.add('visited');\n      if (c.x == target.x && c.y == target.y) return [c, count];\n      if (c.x + 1 < 40 && !hashmap[`${c.x + 1}-${c.y}`] && !graph[c.y][c.x + 1].iswall) {\n        queue.unshift({\n          x: c.x + 1,\n          y: c.y\n        });\n        prevmap[`${c.x + 1}-${c.y}`] = {\n          ...c\n        };\n        hashmap[`${c.x + 1}-${c.y}`] = true;\n      }\n      if (c.x - 1 >= 0 && !hashmap[`${c.x - 1}-${c.y}`] && !graph[c.y][c.x - 1].iswall) {\n        queue.unshift({\n          x: c.x - 1,\n          y: c.y\n        });\n        prevmap[`${c.x - 1}-${c.y}`] = {\n          ...c\n        };\n        hashmap[`${c.x - 1}-${c.y}`] = true;\n      }\n      if (c.y + 1 < 25 && !hashmap[`${c.x}-${c.y + 1}`] && !graph[c.y + 1][c.x].iswall) {\n        queue.unshift({\n          x: c.x,\n          y: c.y + 1\n        });\n        prevmap[`${c.x}-${c.y + 1}`] = {\n          ...c\n        };\n        hashmap[`${c.x}-${c.y + 1}`] = true;\n      }\n      if (c.y - 1 >= 0 && !hashmap[`${c.x}-${c.y - 1}`] && !graph[c.y - 1][c.x].iswall) {\n        queue.unshift({\n          x: c.x,\n          y: c.y - 1\n        });\n        prevmap[`${c.x}-${c.y - 1}`] = {\n          ...c\n        };\n        hashmap[`${c.x}-${c.y - 1}`] = true;\n      }\n    }\n    return null;\n  }\n  function BDS(graph, hashmap, prevmap, start, target) {\n    let queue = [start];\n    let count = 0;\n    hashmap[`${start.x}-${start.y}`] = true;\n    while (queue.length > 0) {\n      count += 1;\n      let c = queue[0];\n      queue.shift();\n      refarray[c.x + c.y * 40].current.style['transition-delay'] = `${count * 8}ms`;\n      refarray[c.x + c.y * 40].current.classList.add('visited');\n      if (c.x == target.x && c.y == target.y) return [c, count];\n      if (c.y + 1 < 20 && !hashmap[`${c.x}-${c.y + 1}`] && !graph[c.y + 1][c.x].iswall) {\n        queue.unshift({\n          x: c.x,\n          y: c.y + 1\n        });\n        prevmap[`${c.x}-${c.y + 1}`] = {\n          ...c\n        };\n        hashmap[`${c.x}-${c.y + 1}`] = true;\n      }\n      if (c.x - 1 >= 0 && !hashmap[`${c.x - 1}-${c.y}`] && !graph[c.y][c.x - 1].iswall) {\n        queue.unshift({\n          x: c.x - 1,\n          y: c.y\n        });\n        prevmap[`${c.x - 1}-${c.y}`] = {\n          ...c\n        };\n        hashmap[`${c.x - 1}-${c.y}`] = true;\n      }\n      if (c.y - 1 >= 0 && !hashmap[`${c.x}-${c.y - 1}`] && !graph[c.y - 1][c.x].iswall) {\n        queue.unshift({\n          x: c.x,\n          y: c.y - 1\n        });\n        prevmap[`${c.x}-${c.y - 1}`] = {\n          ...c\n        };\n        hashmap[`${c.x}-${c.y - 1}`] = true;\n      }\n      if (c.x + 1 < 40 && !hashmap[`${c.x + 1}-${c.y}`] && !graph[c.y][c.x + 1].iswall) {\n        queue.unshift({\n          x: c.x + 1,\n          y: c.y\n        });\n        prevmap[`${c.x + 1}-${c.y}`] = {\n          ...c\n        };\n        hashmap[`${c.x + 1}-${c.y}`] = true;\n      }\n    }\n    return null;\n  }\n  useEffect(() => {\n    if (algo == 'BFS') {\n      let hashmap = {};\n      let prevmap = {};\n      for (let j = 0; j < 25; j++) {\n        for (let i = 0; i < 40; i++) {\n          hashmap[`${i}-${j}`] = false;\n          prevmap[`${i}-${j}`] = null;\n        }\n      }\n      let result = BFS(grid, hashmap, prevmap, start.current, end.current);\n      let path = [];\n      if (result != null) {\n        let current = result[0];\n        while (prevmap[`${current.x}-${current.y}`] != null) {\n          path.push(current);\n          current = prevmap[`${current.x}-${current.y}`];\n        }\n        setTimeout(() => {\n          path.reverse().forEach((elem, index) => {\n            refarray[elem.x + elem.y * 40].current.style['transition-delay'] = `${index * 15}ms`;\n            refarray[elem.x + elem.y * 40].current.classList.add('path');\n          });\n        }, result[1] * 9);\n      }\n    }\n    if (algo == 'BDS') {\n      let hashmap = {};\n      let prevmap = {};\n      for (let j = 0; j < 25; j++) {\n        for (let i = 0; i < 40; i++) {\n          hashmap[`${i}-${j}`] = false;\n          prevmap[`${i}-${j}`] = null;\n        }\n      }\n      let result = BDS(grid, hashmap, prevmap, start.current, end.current);\n      let path = [];\n      if (result != null) {\n        let current = result[0];\n        while (prevmap[`${current.x}-${current.y}`] != null) {\n          path.push(current);\n          current = prevmap[`${current.x}-${current.y}`];\n        }\n        setTimeout(() => {\n          path.reverse().forEach((elem, index) => {\n            refarray[elem.x + elem.y * 40].current.style['transition-delay'] = `${index * 15}ms`;\n            refarray[elem.x + elem.y * 40].current.classList.add('path');\n          });\n        }, result[1] * 9);\n      }\n    }\n  }, [run]);\n  useEffect(() => {\n    refarray.forEach(elem => {\n      elem.current.style['transition-delay'] = '0ms';\n    });\n    refarray.forEach(elem => {\n      elem.current.classList.remove('visited');\n      elem.current.classList.remove('path');\n    });\n  }, [res]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: refarray.map((elem, index) => {\n      let classList = ['cell'];\n      let yindex = Math.floor(index / 40);\n      let xindex = index % 40;\n      let cell = grid[yindex][xindex];\n      if (cell.iswall) {\n        classList.push('wall');\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: elem,\n        className: classList.join(' '),\n        onMouseDown: () => {\n          seteditFlag(true);\n        },\n        onMouseUp: () => {\n          seteditFlag(false);\n        },\n        onMouseMove: () => {\n          if (!editing) return;\n          const current = grid[yindex][xindex];\n          if (current.isstart || current.istarget) return;\n          switch (mode) {\n            case 'setstart':\n              var newgrid = grid.map(elem => {\n                return elem.map(elem => {\n                  if (!elem.isstart) return elem;\n                  return {\n                    ...elem,\n                    isstart: false\n                  };\n                });\n              });\n              newgrid[yindex][xindex] = {\n                ...newgrid[yindex][xindex],\n                isstart: true,\n                istarget: false,\n                weight: 1,\n                iswall: false\n              };\n              start.current = {\n                x: xindex,\n                y: yindex\n              };\n              setgrid(newgrid);\n              break;\n            case 'settarget':\n              var newgrid = grid.map(elem => {\n                return elem.map(elem => {\n                  if (!elem.istarget) return elem;\n                  return {\n                    ...elem,\n                    istarget: false\n                  };\n                });\n              });\n              newgrid[yindex][xindex] = {\n                ...newgrid[yindex][xindex],\n                isstart: false,\n                istarget: true,\n                weight: 1,\n                iswall: false\n              };\n              end.current = {\n                x: xindex,\n                y: yindex\n              };\n              setgrid(newgrid);\n              break;\n            case 'addbricks':\n              var newgrid = grid.slice();\n              newgrid[yindex][xindex] = {\n                ...newgrid[yindex][xindex],\n                weight: 1,\n                iswall: true\n              };\n              setgrid(newgrid);\n              break;\n            case 'addweight':\n              var newgrid = grid.slice();\n              newgrid[yindex][xindex] = {\n                ...newgrid[yindex][xindex],\n                weight: 5,\n                iswall: false\n              };\n              setgrid(newgrid);\n              break;\n            default:\n              return;\n          }\n        },\n        children: [cell.weight > 1 ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-virus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 30\n        }, this) : null, cell.isstart ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-geo-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 27\n        }, this) : null, cell.istarget ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-geo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 28\n        }, this) : null]\n      }, `${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s2(Grid, \"fNylRYN43jxJhXQvh47bFylypHU=\", false, function () {\n  return [useParams];\n});\n_c = Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getGrid","useParams","getrefarray","grid","array","forEach","elem","child","push","Grid","setgrid","editing","seteditFlag","mode","start","end","run","res","algo","refarray","BFS","graph","hashmap","prevmap","target","queue","count","x","y","length","c","pop","current","style","classList","add","iswall","unshift","BDS","shift","j","i","result","path","setTimeout","reverse","index","remove","map","yindex","Math","floor","xindex","cell","join","isstart","istarget","newgrid","weight","slice"],"sources":["D:/Algo-visualizer-main/Algo-visualizer-main/src/components/Grid/Grid.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useState  } from 'react'\r\nimport { getGrid } from '../../utils/startinggrid'\r\nimport './grid.css'\r\nimport { useParams } from '../../context/context'\r\n\r\nfunction getrefarray(grid) {\r\n  let array = [];\r\n  grid.forEach((elem) => {\r\n    elem.forEach((child) => {\r\n      array.push(useRef());\r\n    });\r\n  });\r\n  return array;\r\n}\r\n\r\nexport default function Grid() {\r\n\r\n  const {grid,setgrid,editing,seteditFlag,mode,start,end,run,res,algo}  = useParams()\r\n\r\n  //const [refarray,mm]=useState(getrefarray(grid))\r\n  \r\n  const refarray = getrefarray(grid);\r\n\r\n  \r\n\r\n  function BFS(graph,hashmap,prevmap,start,target){\r\n    let queue=[start]\r\n    let count=0\r\n    hashmap[`${start.x}-${start.y}`]=true\r\n    while (queue.length > 0){\r\n      count+=1\r\n      let c=queue.pop()\r\n      refarray[c.x+c.y*40].current.style['transition-delay']=`${count * 8}ms`\r\n      refarray[c.x+c.y*40].current.classList.add('visited')\r\n      if (c.x == target.x && c.y == target.y) return [c,count]\r\n \r\n      if(c.x+1 < 40 && !hashmap[`${c.x+1}-${c.y}`] && !graph[c.y][c.x+1].iswall){\r\n        queue.unshift({x:c.x +1,y:c.y})\r\n        prevmap[`${c.x+1}-${c.y}`]={...c}\r\n        hashmap[`${c.x+1}-${c.y}`]=true\r\n      }\r\n      if(c.x-1 >=0 && !hashmap[`${c.x-1}-${c.y}`] && !graph[c.y][c.x-1].iswall){\r\n        queue.unshift({x:c.x -1,y:c.y})\r\n        prevmap[`${c.x-1}-${c.y}`]={...c}\r\n        hashmap[`${c.x-1}-${c.y}`]=true\r\n      }\r\n      if(c.y+1 < 25 && !hashmap[`${c.x}-${c.y+1}`] && !graph[c.y+1][c.x].iswall){\r\n        queue.unshift({x:c.x ,y:c.y+1})\r\n        prevmap[`${c.x}-${c.y+1}`]={...c}\r\n        hashmap[`${c.x}-${c.y+1}`]=true\r\n      }\r\n      if(c.y-1 >=0 && !hashmap[`${c.x}-${c.y-1}`] && !graph[c.y-1][c.x].iswall){\r\n        queue.unshift({x:c.x ,y:c.y-1})\r\n        prevmap[`${c.x}-${c.y-1}`]={...c}\r\n        hashmap[`${c.x}-${c.y-1}`]=true\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  function BDS(graph,hashmap,prevmap,start,target){\r\n    let queue=[start]\r\n    let count=0\r\n    hashmap[`${start.x}-${start.y}`]=true\r\n    while (queue.length > 0){\r\n      count+=1\r\n      let c=queue[0]\r\n      queue.shift()\r\n      refarray[c.x+c.y*40].current.style['transition-delay']=`${count * 8}ms`\r\n      refarray[c.x+c.y*40].current.classList.add('visited')\r\n      if (c.x == target.x && c.y == target.y) return [c,count]\r\n \r\n      \r\n      \r\n      if(c.y+1 < 20 && !hashmap[`${c.x}-${c.y+1}`] && !graph[c.y+1][c.x].iswall){\r\n        queue.unshift({x:c.x ,y:c.y+1})\r\n        prevmap[`${c.x}-${c.y+1}`]={...c}\r\n        hashmap[`${c.x}-${c.y+1}`]=true\r\n      }\r\n      if(c.x-1 >=0 && !hashmap[`${c.x-1}-${c.y}`] && !graph[c.y][c.x-1].iswall){\r\n        queue.unshift({x:c.x -1,y:c.y})\r\n        prevmap[`${c.x-1}-${c.y}`]={...c}\r\n        hashmap[`${c.x-1}-${c.y}`]=true\r\n      }\r\n      if(c.y-1 >=0 && !hashmap[`${c.x}-${c.y-1}`] && !graph[c.y-1][c.x].iswall){\r\n        queue.unshift({x:c.x ,y:c.y-1})\r\n        prevmap[`${c.x}-${c.y-1}`]={...c}\r\n        hashmap[`${c.x}-${c.y-1}`]=true\r\n      }\r\n      if(c.x+1 < 40 && !hashmap[`${c.x+1}-${c.y}`] && !graph[c.y][c.x+1].iswall){\r\n        queue.unshift({x:c.x +1,y:c.y})\r\n        prevmap[`${c.x+1}-${c.y}`]={...c}\r\n        hashmap[`${c.x+1}-${c.y}`]=true\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n useEffect(()=>{\r\n\r\nif (algo == 'BFS'){\r\n  let hashmap={}\r\n  let prevmap={}\r\n  for (let j=0;j<25;j++){\r\n   for (let i=0;i<40;i++){\r\n     hashmap[`${i}-${j}`]=false\r\n     prevmap[`${i}-${j}`]=null\r\n   }\r\n }\r\n let result=BFS(grid,hashmap,prevmap,start.current,end.current)\r\n let path=[]\r\n if (result !=null){\r\n  let current=result[0]\r\n  while (prevmap[`${current.x}-${current.y}`] != null){\r\n    path.push(current)\r\n    current=prevmap[`${current.x}-${current.y}`]\r\n  }\r\n  setTimeout(()=>{path.reverse().forEach((elem,index)=>{\r\n    refarray[elem.x+elem.y*40].current.style['transition-delay']=`${( index) * 15}ms`\r\n      refarray[elem.x+elem.y*40].current.classList.add('path')\r\n  })},result[1]*9)\r\n  \r\n }\r\n  \r\n \r\n}\r\nif (algo == 'BDS'){\r\n  let hashmap={}\r\n  let prevmap={}\r\n  for (let j=0;j<25;j++){\r\n   for (let i=0;i<40;i++){\r\n     hashmap[`${i}-${j}`]=false\r\n     prevmap[`${i}-${j}`]=null\r\n   }\r\n }\r\n  let result=BDS(grid,hashmap,prevmap,start.current,end.current)\r\n  let path=[]\r\n  if (result !=null){\r\n   let current=result[0]\r\n   while (prevmap[`${current.x}-${current.y}`] != null){\r\n     path.push(current)\r\n     current=prevmap[`${current.x}-${current.y}`]\r\n   }\r\n   setTimeout(()=>{path.reverse().forEach((elem,index)=>{\r\n     refarray[elem.x+elem.y*40].current.style['transition-delay']=`${( index) * 15}ms`\r\n       refarray[elem.x+elem.y*40].current.classList.add('path')\r\n   })},result[1]*9)\r\n   \r\n  }\r\n   \r\n  \r\n }\r\n },[run])\r\n\r\n useEffect(()=>{\r\n  refarray.forEach((elem)=>{elem.current.style['transition-delay']='0ms'})\r\n  refarray.forEach((elem)=>{elem.current.classList.remove('visited');elem.current.classList.remove('path')})\r\n },[res])\r\n\r\n  return (\r\n    <div className='board'>\r\n      {refarray.map((elem,index)=> {\r\n        let classList=['cell']\r\n\r\n        let yindex=Math.floor(index/40)\r\n        let xindex=index % 40\r\n        let cell=grid[yindex][xindex]\r\n\r\n        if (cell.iswall) {\r\n          classList.push('wall')\r\n        }\r\n        \r\n        return <div key={`${index}`} ref={elem}  className={classList.join(' ')} \r\n        onMouseDown={()=>{seteditFlag(true)}} onMouseUp={()=>{seteditFlag(false)}}\r\n        onMouseMove={()=>{\r\n          if (!editing) return\r\n          const current= grid[yindex][xindex]\r\n           if (current.isstart || current.istarget ) return\r\n           switch(mode){\r\n            case 'setstart':\r\n              var newgrid=grid.map((elem)=>{\r\n              return elem.map((elem)=>{\r\n                if (!elem.isstart) return elem\r\n                return {...elem,isstart:false}\r\n              }) \r\n             })\r\n             newgrid[yindex][xindex]={...newgrid[yindex][xindex],isstart:true,istarget:false,weight:1,iswall:false}\r\n             start.current={x:xindex,y:yindex}\r\n             setgrid(newgrid)\r\n             break;\r\n\r\n           case 'settarget':\r\n                var newgrid=grid.map((elem)=>{\r\n                return elem.map((elem)=>{\r\n                  if (!elem.istarget) return elem\r\n                  return {...elem,istarget:false}\r\n                }) \r\n               })\r\n               newgrid[yindex][xindex]={...newgrid[yindex][xindex],isstart:false,istarget:true,weight:1,iswall:false}\r\n               end.current={x:xindex,y:yindex}\r\n               setgrid(newgrid)\r\n               break;\r\n\r\n             case 'addbricks':\r\n                var newgrid=grid.slice()\r\n               newgrid[yindex][xindex]={...newgrid[yindex][xindex],weight:1,iswall:true}\r\n               setgrid(newgrid)\r\n               break;\r\n\r\n            case 'addweight':\r\n                var newgrid=grid.slice()\r\n               newgrid[yindex][xindex]={...newgrid[yindex][xindex],weight:5,iswall:false}\r\n               setgrid(newgrid)\r\n               break;\r\n           default:\r\n             return \r\n            }}}>\r\n         \r\n\r\n          {cell.weight > 1 ? <i className=\"bi bi-virus\"></i> : null}\r\n          {cell.isstart ? <i className=\"bi bi-geo-alt\"></i> : null }\r\n          {cell.istarget ? <i className=\"bi bi-geo\"></i> : null }\r\n          \r\n         </div>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}